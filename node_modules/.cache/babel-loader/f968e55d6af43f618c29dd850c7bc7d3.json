{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react app/stasher/src/home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { addDays, startOfDay, format } from 'date-fns';\nimport { isDateRangeValid } from './util';\nimport { Stashpoint } from './Data';\nimport { getStash } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getInitialDraftCart = () => {\n  const initialDateFrom = addDays(startOfDay(new Date()), 1);\n  return {\n    bagCount: 1,\n    dateRange: {\n      from: initialDateFrom,\n      to: addDays(initialDateFrom, 1)\n    },\n    stashpointId: undefined\n  };\n};\n\nconst Home = () => {\n  _s();\n\n  var _stachList$find;\n\n  const [stachList, setStachList] = useState();\n  const [cart, setCart] = useState(getInitialDraftCart);\n  const [priceQuote, setPriceQuote] = useState();\n  const [booking, setBooking] = useState();\n  const [bookingId, setBookingId] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const getStashlist = async () => {\n    const unknownJsonData = await getStash();\n    const [error, stashpoint] = Stashpoint.decode(unknownJsonData);\n    return error === undefined ? stashpoint : error;\n  };\n\n  useEffect(() => {\n    getStashlist();\n  }, []);\n\n  const handleChangeData = e => {\n    console.log(e);\n    let type = e.target.name;\n    let value = e.target.value;\n    let carts = { ...cart\n    };\n\n    if (value && value.length > 0) {\n      switch (type) {\n        case 'stashpoint':\n          carts.stashpointId = value;\n          setCart(carts);\n          break;\n\n        case 'fromDate':\n          carts.dateRange.from = startOfDay(new Date(value));\n          setCart(carts);\n          break;\n\n        case 'toDate':\n          carts.dateRange.to = startOfDay(new Date(value));\n          setCart(carts);\n          break;\n\n        case 'bagCount':\n          carts.bagCount = parseInt(value);\n          setCart(carts);\n          break;\n\n        default:\n          break;\n      }\n\n      if (carts.bagCount && carts.dateRange.from && carts.dateRange.to && carts.stashpointId && isDateRangeValid(carts.dateRange)) {\n        setLoading(true);\n        setBookingId(undefined);\n        fetch('http://localhost:3000/api/quotes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(carts)\n        }).then(res => res.json()).then(response => {\n          setLoading(false);\n          setPriceQuote(response);\n        }).catch(err => console.log(err));\n      }\n    }\n  };\n\n  const payBooking = () => {\n    setLoading(true);\n    fetch('http://localhost:3000/api/bookings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(priceQuote)\n    }).then(res => res.json()).then(response => {\n      setBooking(response);\n      fetch('http://localhost:3000/api/payments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          bookingId: response.id\n        })\n      }).then(res => res.json()).then(response => {\n        setLoading(false);\n        setBookingId(response.id);\n        setPriceQuote(undefined);\n        setCart(getInitialDraftCart);\n      });\n    }).catch(err => console.log(err));\n  };\n\n  console.log('cart', cart, getInitialDraftCart().dateRange);\n  console.log('priceQuote', priceQuote);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading stashpoints\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"stashpoint\",\n        onChange: handleChangeData,\n        value: cart.stashpointId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), stachList === null || stachList === void 0 ? void 0 : stachList.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: data.id,\n            selected: cart.stashpointId == data.id ? true : false,\n            children: data.name\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"fromDate\",\n        name: \"fromDate\",\n        onChange: handleChangeData,\n        value: format(cart.dateRange.from, 'yyyy-MM-dd')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"toDate\",\n        name: \"toDate\",\n        onChange: handleChangeData,\n        value: format(cart.dateRange.to, 'yyyy-MM-dd')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"bagCount\",\n        value: cart.bagCount,\n        onInput: handleChangeData,\n        min: 1,\n        max: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), priceQuote ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            border: '1px solid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              border: '1px solid'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stash Point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bag Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: stachList === null || stachList === void 0 ? void 0 : (_stachList$find = stachList.find(data => data.id == priceQuote.stashpointId)) === null || _stachList$find === void 0 ? void 0 : _stachList$find.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: priceQuote.bagCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: priceQuote.currencyCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: format(new Date(priceQuote.dateRange.from), 'yyyy-MM-dd')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: format(new Date(priceQuote.dateRange.to), 'yyyy-MM-dd')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: priceQuote.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: payBooking,\n          children: \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : null, bookingId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Booking \", bookingId, \" successful\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"VyjuiCv/RnCXksH70M8kP+AYkck=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mac/Documents/react app/stasher/src/home.tsx"],"names":["React","useEffect","useState","addDays","startOfDay","format","isDateRangeValid","Stashpoint","getStash","getInitialDraftCart","initialDateFrom","Date","bagCount","dateRange","from","to","stashpointId","undefined","Home","stachList","setStachList","cart","setCart","priceQuote","setPriceQuote","booking","setBooking","bookingId","setBookingId","loading","setLoading","getStashlist","unknownJsonData","error","stashpoint","decode","handleChangeData","e","console","log","type","target","name","value","carts","length","parseInt","fetch","method","headers","body","JSON","stringify","then","res","json","response","catch","err","payBooking","id","map","data","border","find","currencyCode","totalPrice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,MAA9B,QAA4C,UAA5C;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,SAASC,UAAT,QAAuD,QAAvD;AACA,SAASC,QAAT,QAAyB,UAAzB;;;;AAQA,MAAMC,mBAAmB,GAAG,MAAiB;AAC3C,QAAMC,eAAe,GAAGP,OAAO,CAACC,UAAU,CAAC,IAAIO,IAAJ,EAAD,CAAX,EAAyB,CAAzB,CAA/B;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,CADL;AAELC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEJ,eAAR;AAAyBK,MAAAA,EAAE,EAAEZ,OAAO,CAACO,eAAD,EAAkB,CAAlB;AAApC,KAFN;AAGLM,IAAAA,YAAY,EAAEC;AAHT,GAAP;AAKD,CARD;;AAUA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,EAA1C;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAYO,mBAAZ,CAAhC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,EAA5C;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,EAAtC;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,EAA1C;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAU,KAAV,CAAtC;;AAEA,QAAM6B,YAAY,GAAG,YAAyC;AAC5D,UAAMC,eAAe,GAAG,MAAMxB,QAAQ,EAAtC;AAEA,UAAM,CAACyB,KAAD,EAAQC,UAAR,IAAsB3B,UAAU,CAAC4B,MAAX,CAAkBH,eAAlB,CAA5B;AAEA,WAAOC,KAAK,KAAKhB,SAAV,GAAsBiB,UAAtB,GAAmCD,KAA1C;AACD,GAND;;AAQAhC,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,gBAAgB,GAAIC,CAAD,IAAY;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,QAAIG,IAAY,GAAGH,CAAC,CAACI,MAAF,CAASC,IAA5B;AACA,QAAIC,KAAU,GAAGN,CAAC,CAACI,MAAF,CAASE,KAA1B;AACA,QAAIC,KAAgB,GAAG,EAAE,GAAGvB;AAAL,KAAvB;;AACA,QAAIsB,KAAK,IAAIA,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+B;AAC7B,cAAQL,IAAR;AACE,aAAK,YAAL;AACEI,UAAAA,KAAK,CAAC5B,YAAN,GAAqB2B,KAArB;AACArB,UAAAA,OAAO,CAACsB,KAAD,CAAP;AACA;;AACF,aAAK,UAAL;AACEA,UAAAA,KAAK,CAAC/B,SAAN,CAAgBC,IAAhB,GAAuBV,UAAU,CAAC,IAAIO,IAAJ,CAASgC,KAAT,CAAD,CAAjC;AACArB,UAAAA,OAAO,CAACsB,KAAD,CAAP;AAEA;;AACF,aAAK,QAAL;AACEA,UAAAA,KAAK,CAAC/B,SAAN,CAAgBE,EAAhB,GAAqBX,UAAU,CAAC,IAAIO,IAAJ,CAASgC,KAAT,CAAD,CAA/B;AACArB,UAAAA,OAAO,CAACsB,KAAD,CAAP;AAEA;;AACF,aAAK,UAAL;AACEA,UAAAA,KAAK,CAAChC,QAAN,GAAiBkC,QAAQ,CAACH,KAAD,CAAzB;AACArB,UAAAA,OAAO,CAACsB,KAAD,CAAP;AAEA;;AAEF;AACE;AAtBJ;;AAwBA,UACEA,KAAK,CAAChC,QAAN,IACAgC,KAAK,CAAC/B,SAAN,CAAgBC,IADhB,IAEA8B,KAAK,CAAC/B,SAAN,CAAgBE,EAFhB,IAGA6B,KAAK,CAAC5B,YAHN,IAIAV,gBAAgB,CAACsC,KAAK,CAAC/B,SAAP,CALlB,EAME;AACAiB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,QAAAA,YAAY,CAACX,SAAD,CAAZ;AACA8B,QAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCC,UAAAA,MAAM,EAAE,MADgC;AAExCC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT,WAF+B;AAKxCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,KAAf;AALkC,SAArC,CAAL,CAOGS,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,QAAD,IAA0B;AAC9B1B,UAAAA,UAAU,CAAC,KAAD,CAAV;AAEAN,UAAAA,aAAa,CAACgC,QAAD,CAAb;AACD,SAZH,EAaGC,KAbH,CAaUC,GAAD,IAASpB,OAAO,CAACC,GAAR,CAAYmB,GAAZ,CAblB;AAcD;AACF;AACF,GAvDD;;AAyDA,QAAMC,UAAU,GAAG,MAAM;AACvB7B,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAiB,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe7B,UAAf;AALoC,KAAvC,CAAL,CAOG8B,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,QAAD,IAA8B;AAClC9B,MAAAA,UAAU,CAAC8B,QAAD,CAAV;AAEAT,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFiC;AAK1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEzB,UAAAA,SAAS,EAAE6B,QAAQ,CAACI;AAAtB,SAAf;AALoC,OAAvC,CAAL,CAOGP,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,QAAD,IAAmB;AACvB1B,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,YAAY,CAAC4B,QAAQ,CAACI,EAAV,CAAZ;AACApC,QAAAA,aAAa,CAACP,SAAD,CAAb;AACAK,QAAAA,OAAO,CAACb,mBAAD,CAAP;AACD,OAbH;AAcD,KAzBH,EA0BGgD,KA1BH,CA0BUC,GAAD,IAASpB,OAAO,CAACC,GAAR,CAAYmB,GAAZ,CA1BlB;AA2BD,GA9BD;;AAgCApB,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBlB,IAApB,EAA0BZ,mBAAmB,GAAGI,SAAhD;AACAyB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BhB,UAA1B;;AAEA,MAAIM,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,QAAQ,EAAEO,gBAFZ;AAGE,QAAA,KAAK,EAAEf,IAAI,CAACL,YAHd;AAAA,gCAKE;AAAA;AAAA;AAAA;AAAA,gBALF,EAMGG,SANH,aAMGA,SANH,uBAMGA,SAAS,CAAE0C,GAAX,CAAgBC,IAAD,IAAU;AACxB,8BACE;AAEE,YAAA,KAAK,EAAEA,IAAI,CAACF,EAFd;AAGE,YAAA,QAAQ,EAAEvC,IAAI,CAACL,YAAL,IAAqB8C,IAAI,CAACF,EAA1B,GAA+B,IAA/B,GAAsC,KAHlD;AAAA,sBAKGE,IAAI,CAACpB;AALR,aACOoB,IAAI,CAACF,EADZ;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,UAFZ;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAExB,gBAJZ;AAKE,QAAA,KAAK,EAAE/B,MAAM,CAACgB,IAAI,CAACR,SAAL,CAAeC,IAAhB,EAAsB,YAAtB;AALf;AAAA;AAAA;AAAA;AAAA,cAnBF,eA0BE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,QAAQ,EAAEsB,gBAJZ;AAKE,QAAA,KAAK,EAAE/B,MAAM,CAACgB,IAAI,CAACR,SAAL,CAAeE,EAAhB,EAAoB,YAApB;AALf;AAAA;AAAA;AAAA;AAAA,cA1BF,eAiCE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEM,IAAI,CAACT,QAHd;AAIE,QAAA,OAAO,EAAEwB,gBAJX;AAKE,QAAA,GAAG,EAAE,CALP;AAME,QAAA,GAAG,EAAE;AANP;AAAA;AAAA;AAAA;AAAA,cAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eA6CE;AAAA;AAAA;AAAA;AAAA,YA7CF,EA8CGb,UAAU,gBACT;AAAA,6BACE;AAAA,gCACE;AAAO,UAAA,KAAK,EAAE;AAAEwC,YAAAA,MAAM,EAAE;AAAV,WAAd;AAAA,kCACE;AAAI,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE;AAAV,aAAX;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAA,oCACE;AAAA,wBAEI5C,SAFJ,aAEIA,SAFJ,0CAEIA,SAAS,CAAE6C,IAAX,CACGF,IAAD,IAAUA,IAAI,CAACF,EAAL,IAAWrC,UAAU,CAACP,YADlC,CAFJ,oDAEI,gBAEG0B;AAJP;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAA,wBAAKnB,UAAU,CAACX;AAAhB;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAA,wBAAKW,UAAU,CAAC0C;AAAhB;AAAA;AAAA;AAAA;AAAA,oBATF,eAUE;AAAA,wBACG5D,MAAM,CAAC,IAAIM,IAAJ,CAASY,UAAU,CAACV,SAAX,CAAqBC,IAA9B,CAAD,EAAsC,YAAtC;AADT;AAAA;AAAA;AAAA;AAAA,oBAVF,eAaE;AAAA,wBACGT,MAAM,CAAC,IAAIM,IAAJ,CAASY,UAAU,CAACV,SAAX,CAAqBE,EAA9B,CAAD,EAAoC,YAApC;AADT;AAAA;AAAA;AAAA;AAAA,oBAbF,eAgBE;AAAA,wBAAKQ,UAAU,CAAC2C;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA6BE;AAAQ,UAAA,OAAO,EAAEP,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADS,GAkCP,IAhFN,EAiFGhC,SAAS,gBACR;AAAA,6BACE;AAAA,+BACE;AAAA,iCAAaA,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,qBADQ,GAMN,IAvFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2FD,CA/MD;;GAAMT,I;;KAAAA,I;AAiNN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { addDays, startOfDay, format } from 'date-fns'\nimport { isDateRangeValid } from './util'\nimport { Stashpoint, BookingEncoded, PriceQuote } from './Data'\nimport { getStash } from './config'\n\ntype DraftCart = {\n  stashpointId: any\n  dateRange: { from: Date; to: Date }\n  bagCount: number\n}\n\nconst getInitialDraftCart = (): DraftCart => {\n  const initialDateFrom = addDays(startOfDay(new Date()), 1)\n\n  return {\n    bagCount: 1,\n    dateRange: { from: initialDateFrom, to: addDays(initialDateFrom, 1) },\n    stashpointId: undefined,\n  }\n}\n\nconst Home = () => {\n  const [stachList, setStachList] = useState<Stashpoint[]>()\n  const [cart, setCart] = useState<DraftCart>(getInitialDraftCart)\n  const [priceQuote, setPriceQuote] = useState<PriceQuote>()\n  const [booking, setBooking] = useState<BookingEncoded>()\n  const [bookingId, setBookingId] = useState<number>()\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const getStashlist = async (): Promise<Stashpoint | Error> => {\n    const unknownJsonData = await getStash()\n\n    const [error, stashpoint] = Stashpoint.decode(unknownJsonData)\n\n    return error === undefined ? stashpoint : error\n  }\n\n  useEffect(() => {\n    getStashlist()\n  }, [])\n\n  const handleChangeData = (e: any) => {\n    console.log(e)\n    let type: string = e.target.name\n    let value: any = e.target.value\n    let carts: DraftCart = { ...cart }\n    if (value && value.length > 0) {\n      switch (type) {\n        case 'stashpoint':\n          carts.stashpointId = value\n          setCart(carts)\n          break\n        case 'fromDate':\n          carts.dateRange.from = startOfDay(new Date(value))\n          setCart(carts)\n\n          break\n        case 'toDate':\n          carts.dateRange.to = startOfDay(new Date(value))\n          setCart(carts)\n\n          break\n        case 'bagCount':\n          carts.bagCount = parseInt(value)\n          setCart(carts)\n\n          break\n\n        default:\n          break\n      }\n      if (\n        carts.bagCount &&\n        carts.dateRange.from &&\n        carts.dateRange.to &&\n        carts.stashpointId &&\n        isDateRangeValid(carts.dateRange)\n      ) {\n        setLoading(true)\n        setBookingId(undefined)\n        fetch('http://localhost:3000/api/quotes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(carts),\n        })\n          .then((res) => res.json())\n          .then((response: PriceQuote) => {\n            setLoading(false)\n\n            setPriceQuote(response)\n          })\n          .catch((err) => console.log(err))\n      }\n    }\n  }\n\n  const payBooking = () => {\n    setLoading(true)\n\n    fetch('http://localhost:3000/api/bookings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(priceQuote),\n    })\n      .then((res) => res.json())\n      .then((response: BookingEncoded) => {\n        setBooking(response)\n\n        fetch('http://localhost:3000/api/payments', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ bookingId: response.id }),\n        })\n          .then((res) => res.json())\n          .then((response: any) => {\n            setLoading(false)\n            setBookingId(response.id)\n            setPriceQuote(undefined)\n            setCart(getInitialDraftCart)\n          })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  console.log('cart', cart, getInitialDraftCart().dateRange)\n  console.log('priceQuote', priceQuote)\n\n  if (loading) {\n    return <span>Loading stashpoints&hellip;</span>\n  }\n\n  return (\n    <div>\n      <h1>Home</h1>\n      <br />\n      <div>\n        <select\n          name='stashpoint'\n          onChange={handleChangeData}\n          value={cart.stashpointId}\n        >\n          <option></option>\n          {stachList?.map((data) => {\n            return (\n              <option\n                key={data.id}\n                value={data.id}\n                selected={cart.stashpointId == data.id ? true : false}\n              >\n                {data.name}\n              </option>\n            )\n          })}\n        </select>\n        <input\n          type='date'\n          className='fromDate'\n          name='fromDate'\n          onChange={handleChangeData}\n          value={format(cart.dateRange.from, 'yyyy-MM-dd')}\n        />\n        <input\n          type='date'\n          className='toDate'\n          name='toDate'\n          onChange={handleChangeData}\n          value={format(cart.dateRange.to, 'yyyy-MM-dd')}\n        />\n        <input\n          type='number'\n          name='bagCount'\n          value={cart.bagCount}\n          onInput={handleChangeData}\n          min={1}\n          max={50}\n        />\n      </div>\n      <br />\n      {priceQuote ? (\n        <>\n          <div>\n            <table style={{ border: '1px solid' }}>\n              <tr style={{ border: '1px solid' }}>\n                <th>Stash Point</th>\n                <th>Bag Count</th>\n                <th>Currency Code</th>\n                <th>From Date</th>\n                <th>To Date</th>\n                <th>Total Price</th>\n              </tr>\n              <tr>\n                <td>\n                  {\n                    stachList?.find(\n                      (data) => data.id == priceQuote.stashpointId,\n                    )?.name\n                  }\n                </td>\n                <td>{priceQuote.bagCount}</td>\n                <td>{priceQuote.currencyCode}</td>\n                <td>\n                  {format(new Date(priceQuote.dateRange.from), 'yyyy-MM-dd')}\n                </td>\n                <td>\n                  {format(new Date(priceQuote.dateRange.to), 'yyyy-MM-dd')}\n                </td>\n                <td>{priceQuote.totalPrice}</td>\n              </tr>\n            </table>\n            <button onClick={payBooking}>Pay</button>\n          </div>\n        </>\n      ) : null}\n      {bookingId ? (\n        <>\n          <div>\n            <h4>Booking {bookingId} successful</h4>\n          </div>\n        </>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}