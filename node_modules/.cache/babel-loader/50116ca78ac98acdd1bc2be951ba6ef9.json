{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react app/stasher/src/home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { addDays, startOfDay, format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getInitialDraftCart = () => {\n  const initialDateFrom = addDays(startOfDay(new Date()), 1);\n  return {\n    bagCount: 1,\n    dateRange: {\n      from: initialDateFrom,\n      to: addDays(initialDateFrom, 1)\n    },\n    stashpointId: undefined\n  };\n};\n\nconst Home = () => {\n  _s();\n\n  const [stachList, setStachList] = useState();\n  const [cart, setCart] = useState(getInitialDraftCart);\n  useEffect(() => {\n    fetch('http://localhost:3000/api/stashpoints').then(res => res.json()).then(response => {\n      console.log(response);\n      setStachList(response);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleChangeData = e => {\n    console.log(e);\n    let type = e.target.name;\n    let value = e.target.value;\n    let carts = { ...cart\n    };\n\n    if (value && value.length > 0) {\n      switch (type) {\n        case 'stashpoint':\n          carts.stashpointId = value;\n          setCart(carts);\n          break;\n\n        case 'fromDate':\n          carts.dateRange.from = value;\n          setCart(carts);\n          break;\n\n        case 'toDate':\n          carts.dateRange.to = value;\n          setCart(carts);\n          break;\n\n        case 'bagCount':\n          carts.bagCount = value;\n          setCart(carts);\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  console.log('cart', cart);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"stashpoint\",\n        onChange: handleChangeData,\n        value: cart.stashpointId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), stachList === null || stachList === void 0 ? void 0 : stachList.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: data.id,\n            children: data.name\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"fromDate\",\n        name: \"fromDate\",\n        min: format(cart.dateRange.from, 'yyyy-MM-dd'),\n        onChange: handleChangeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        min: format(cart.dateRange.to, 'yyyy-MM-dd'),\n        className: \"toDate\",\n        name: \"toDate\",\n        onChange: handleChangeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\" //   pattern='[0-9]*'\n        ,\n        name: \"bagCount\",\n        value: cart.bagCount,\n        onInput: handleChangeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"23ex7ashrWJ5j7+c8QlMOBpvjq4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mac/Documents/react app/stasher/src/home.tsx"],"names":["React","useEffect","useState","addDays","startOfDay","format","getInitialDraftCart","initialDateFrom","Date","bagCount","dateRange","from","to","stashpointId","undefined","Home","stachList","setStachList","cart","setCart","fetch","then","res","json","response","console","log","catch","err","handleChangeData","e","type","target","name","value","carts","length","map","data","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { addDays, startOfDay, format } from 'date-fns'\nimport { Stashpoint, DateRange } from './Data'\n\ntype DraftCart = {\n  stashpointId: any\n  dateRange: { from: any; to: any }\n  bagCount: number\n}\n\nconst getInitialDraftCart = (): DraftCart => {\n  const initialDateFrom = addDays(startOfDay(new Date()), 1)\n\n  return {\n    bagCount: 1,\n    dateRange: { from: initialDateFrom, to: addDays(initialDateFrom, 1) },\n    stashpointId: undefined,\n  }\n}\n\nconst Home = () => {\n  const [stachList, setStachList] = useState<Stashpoint[]>()\n  const [cart, setCart] = useState<DraftCart>(getInitialDraftCart)\n  useEffect(() => {\n    fetch('http://localhost:3000/api/stashpoints')\n      .then((res) => res.json())\n      .then((response: Stashpoint[]) => {\n        console.log(response)\n        setStachList(response)\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n  const handleChangeData = (e: any) => {\n    console.log(e)\n    let type: string = e.target.name\n    let value: any = e.target.value\n    let carts: DraftCart = { ...cart }\n    if (value && value.length > 0) {\n      switch (type) {\n        case 'stashpoint':\n          carts.stashpointId = value\n          setCart(carts)\n          break\n        case 'fromDate':\n          carts.dateRange.from = value\n          setCart(carts)\n\n          break\n        case 'toDate':\n          carts.dateRange.to = value\n          setCart(carts)\n\n          break\n        case 'bagCount':\n          carts.bagCount = value\n          setCart(carts)\n\n          break\n\n        default:\n          break\n      }\n    }\n  }\n\n  console.log('cart', cart)\n  return (\n    <div>\n      <h1>Home</h1>\n      <br />\n      <div>\n        <select\n          name='stashpoint'\n          onChange={handleChangeData}\n          value={cart.stashpointId}\n        >\n          <option></option>\n          {stachList?.map((data) => {\n            return (\n              <option key={data.id} value={data.id}>\n                {data.name}\n              </option>\n            )\n          })}\n        </select>\n        <input\n          type='date'\n          className='fromDate'\n          name='fromDate'\n          min={format(cart.dateRange.from, 'yyyy-MM-dd')}\n          onChange={handleChangeData}\n        />\n        <input\n          type='date'\n          min={format(cart.dateRange.to, 'yyyy-MM-dd')}\n          className='toDate'\n          name='toDate'\n          onChange={handleChangeData}\n        />\n        <input\n          type='number'\n          //   pattern='[0-9]*'\n          name='bagCount'\n          value={cart.bagCount}\n          onInput={handleChangeData}\n        />\n        <button>Submit</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}