{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react app/stasher/src/home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { addDays, startOfDay, format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getInitialDraftCart = () => {\n  const initialDateFrom = addDays(startOfDay(new Date()), 1);\n  return {\n    bagCount: 1,\n    dateRange: {\n      from: initialDateFrom,\n      to: addDays(initialDateFrom, 1)\n    },\n    stashpointId: undefined\n  };\n};\n\nconst Home = () => {\n  _s();\n\n  const [stachList, setStachList] = useState();\n  const [cart, setCart] = useState(getInitialDraftCart);\n  const [priceQuote, setPriceQuote] = useState();\n  useEffect(() => {\n    fetch('http://localhost:3000/api/stashpoints').then(res => res.json()).then(response => {\n      console.log(response);\n      setStachList(response);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleChangeData = e => {\n    console.log(e);\n    let type = e.target.name;\n    let value = e.target.value;\n    let carts = { ...cart\n    };\n\n    if (value && value.length > 0) {\n      switch (type) {\n        case 'stashpoint':\n          carts.stashpointId = value;\n          setCart(carts);\n          break;\n\n        case 'fromDate':\n          carts.dateRange.from = new Date(value);\n          setCart(carts);\n          break;\n\n        case 'toDate':\n          carts.dateRange.to = new Date(value);\n          setCart(carts);\n          break;\n\n        case 'bagCount':\n          carts.bagCount = parseInt(value);\n          setCart(carts);\n          break;\n\n        default:\n          break;\n      }\n\n      if (carts.bagCount && carts.dateRange.from && carts.dateRange.to && carts.stashpointId) {\n        console.log('response here');\n        fetch('http://localhost:3000/api/quotes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(carts)\n        }).then(res => res.json()).then(response => {\n          setPriceQuote(response);\n        }).catch(err => console.log(err));\n      }\n    }\n  };\n\n  console.log('cart', cart);\n  console.log('priceQuote', priceQuote);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"stashpoint\",\n        onChange: handleChangeData,\n        value: cart.stashpointId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), stachList === null || stachList === void 0 ? void 0 : stachList.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: data.id,\n            children: data.name\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"fromDate\",\n        name: \"fromDate\" //   min={format(new Date(cart.dateRange.from), 'yyyy-MM-dd')}\n        ,\n        onChange: handleChangeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\" //   min={format(new Date(cart.dateRange.to), 'yyyy-MM-dd')}\n        ,\n        className: \"toDate\",\n        name: \"toDate\",\n        onChange: handleChangeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"bagCount\",\n        value: cart.bagCount,\n        onInput: handleChangeData,\n        min: 1,\n        max: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), priceQuote ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            border: '1px solid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              border: '1px solid'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bag Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: priceQuote.bagCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: priceQuote.currencyCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: format(new Date(priceQuote.dateRange.from), 'yyyy-MM-dd')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: format(new Date(priceQuote.dateRange.to), 'yyyy-MM-dd')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: priceQuote.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"hMaBKLH/z/PlHUiaV9WEcjRCUBg=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mac/Documents/react app/stasher/src/home.tsx"],"names":["React","useEffect","useState","addDays","startOfDay","format","getInitialDraftCart","initialDateFrom","Date","bagCount","dateRange","from","to","stashpointId","undefined","Home","stachList","setStachList","cart","setCart","priceQuote","setPriceQuote","fetch","then","res","json","response","console","log","catch","err","handleChangeData","e","type","target","name","value","carts","length","parseInt","method","headers","body","JSON","stringify","map","data","id","border","currencyCode","totalPrice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { addDays, startOfDay, format } from 'date-fns'\nimport { Stashpoint, DateRange } from './Data'\n\ntype DraftCart = {\n  stashpointId: any\n  dateRange: { from: Date; to: Date }\n  bagCount: number\n}\n\ntype PriceQuote = {\n  readonly bagCount: number\n  readonly currencyCode: string\n  readonly dateRange: DateRange\n  readonly stashpointId: string\n  readonly totalPrice: number\n}\n\nconst getInitialDraftCart = (): DraftCart => {\n  const initialDateFrom = addDays(startOfDay(new Date()), 1)\n\n  return {\n    bagCount: 1,\n    dateRange: { from: initialDateFrom, to: addDays(initialDateFrom, 1) },\n    stashpointId: undefined,\n  }\n}\n\nconst Home = () => {\n  const [stachList, setStachList] = useState<Stashpoint[]>()\n  const [cart, setCart] = useState<DraftCart>(getInitialDraftCart)\n  const [priceQuote, setPriceQuote] = useState<PriceQuote>()\n  useEffect(() => {\n    fetch('http://localhost:3000/api/stashpoints')\n      .then((res) => res.json())\n      .then((response: Stashpoint[]) => {\n        console.log(response)\n        setStachList(response)\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n  const handleChangeData = (e: any) => {\n    console.log(e)\n    let type: string = e.target.name\n    let value: any = e.target.value\n    let carts: DraftCart = { ...cart }\n    if (value && value.length > 0) {\n      switch (type) {\n        case 'stashpoint':\n          carts.stashpointId = value\n          setCart(carts)\n          break\n        case 'fromDate':\n          carts.dateRange.from = new Date(value)\n          setCart(carts)\n\n          break\n        case 'toDate':\n          carts.dateRange.to = new Date(value)\n          setCart(carts)\n\n          break\n        case 'bagCount':\n          carts.bagCount = parseInt(value)\n          setCart(carts)\n\n          break\n\n        default:\n          break\n      }\n      if (\n        carts.bagCount &&\n        carts.dateRange.from &&\n        carts.dateRange.to &&\n        carts.stashpointId\n      ) {\n        console.log('response here')\n\n        fetch('http://localhost:3000/api/quotes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(carts),\n        })\n          .then((res) => res.json())\n          .then((response: PriceQuote) => {\n            setPriceQuote(response)\n          })\n          .catch((err) => console.log(err))\n      }\n    }\n  }\n\n  console.log('cart', cart)\n  console.log('priceQuote', priceQuote)\n\n  return (\n    <div>\n      <h1>Home</h1>\n      <br />\n      <div>\n        <select\n          name='stashpoint'\n          onChange={handleChangeData}\n          value={cart.stashpointId}\n        >\n          <option></option>\n          {stachList?.map((data) => {\n            return (\n              <option key={data.id} value={data.id}>\n                {data.name}\n              </option>\n            )\n          })}\n        </select>\n        <input\n          type='date'\n          className='fromDate'\n          name='fromDate'\n          //   min={format(new Date(cart.dateRange.from), 'yyyy-MM-dd')}\n          onChange={handleChangeData}\n        />\n        <input\n          type='date'\n          //   min={format(new Date(cart.dateRange.to), 'yyyy-MM-dd')}\n          className='toDate'\n          name='toDate'\n          onChange={handleChangeData}\n        />\n        <input\n          type='number'\n          name='bagCount'\n          value={cart.bagCount}\n          onInput={handleChangeData}\n          min={1}\n          max={50}\n        />\n        <button>Submit</button>\n      </div>\n      <br />\n      {priceQuote ? (\n        <>\n          <div>\n            <table style={{ border: '1px solid' }}>\n              <tr style={{ border: '1px solid' }}>\n                <th>Bag Count</th>\n                <th>Currency Code</th>\n                <th>From Date</th>\n                <th>To Date</th>\n                <th>Total Price</th>\n              </tr>\n              <tr>\n                <td>{priceQuote.bagCount}</td>\n                <td>{priceQuote.currencyCode}</td>\n                <td>\n                  {format(new Date(priceQuote.dateRange.from), 'yyyy-MM-dd')}\n                </td>\n                <td>\n                  {format(new Date(priceQuote.dateRange.to), 'yyyy-MM-dd')}\n                </td>\n                <td>{priceQuote.totalPrice}</td>\n              </tr>\n            </table>\n          </div>\n        </>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}