{"ast":null,"code":"// Note: Ignore unsafe decoding of data\nimport { DateRange } from './DateRange';\nimport { Price } from './Price';\nimport { Stashpoint } from './Stashpoint';\nexport const Booking = {\n  decode: input => {\n    const [error1, dateRange] = DateRange.decode(input.dateRange);\n    if (error1 !== undefined) return [error1, undefined];\n    const [error2, totalPrice] = Price.decode(input.totalPrice);\n    if (error2 !== undefined) return [error2, undefined];\n    const [error3, stashpoint] = Stashpoint.decode(input.stashpoint);\n    if (error3 !== undefined) return [error3, undefined];\n    return [undefined, { ...input,\n      dateRange,\n      stashpoint,\n      totalPrice\n    }];\n  },\n  encode: booking => {\n    return { ...booking,\n      dateRange: DateRange.encode(booking.dateRange),\n      stashpoint: Stashpoint.encode(booking.stashpoint),\n      totalPrice: Price.encode(booking.totalPrice)\n    };\n  }\n};","map":{"version":3,"sources":["/Users/mac/Documents/react app/stasher/src/Data/Booking.ts"],"names":["DateRange","Price","Stashpoint","Booking","decode","input","error1","dateRange","undefined","error2","totalPrice","error3","stashpoint","encode","booking"],"mappings":"AAAA;AAEA,SAASA,SAAT,QAA4C,aAA5C;AACA,SAASC,KAAT,QAAoC,SAApC;AACA,SAASC,UAAT,QAA8C,cAA9C;AAoBA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,MAAM,EACJC,KADM,IAE0D;AAChE,UAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,SAAS,CAACI,MAAV,CAAkBC,KAAD,CAAeE,SAAhC,CAA5B;AAEA,QAAID,MAAM,KAAKE,SAAf,EAA0B,OAAO,CAACF,MAAD,EAASE,SAAT,CAAP;AAE1B,UAAM,CAACC,MAAD,EAASC,UAAT,IAAuBT,KAAK,CAACG,MAAN,CAAcC,KAAD,CAAeK,UAA5B,CAA7B;AAEA,QAAID,MAAM,KAAKD,SAAf,EAA0B,OAAO,CAACC,MAAD,EAASD,SAAT,CAAP;AAE1B,UAAM,CAACG,MAAD,EAASC,UAAT,IAAuBV,UAAU,CAACE,MAAX,CAAmBC,KAAD,CAAeO,UAAjC,CAA7B;AAEA,QAAID,MAAM,KAAKH,SAAf,EAA0B,OAAO,CAACG,MAAD,EAASH,SAAT,CAAP;AAE1B,WAAO,CAACA,SAAD,EAAY,EAAE,GAAIH,KAAN;AAAqBE,MAAAA,SAArB;AAAgCK,MAAAA,UAAhC;AAA4CF,MAAAA;AAA5C,KAAZ,CAAP;AACD,GAjBoB;AAkBrBG,EAAAA,MAAM,EAAGC,OAAD,IAAsC;AAC5C,WAAO,EACL,GAAGA,OADE;AAELP,MAAAA,SAAS,EAAEP,SAAS,CAACa,MAAV,CAAiBC,OAAO,CAACP,SAAzB,CAFN;AAGLK,MAAAA,UAAU,EAAEV,UAAU,CAACW,MAAX,CAAkBC,OAAO,CAACF,UAA1B,CAHP;AAILF,MAAAA,UAAU,EAAET,KAAK,CAACY,MAAN,CAAaC,OAAO,CAACJ,UAArB;AAJP,KAAP;AAMD;AAzBoB,CAAhB","sourcesContent":["// Note: Ignore unsafe decoding of data\n\nimport { DateRange, DateRangeEncoded } from './DateRange'\nimport { Price, PriceEncoded } from './Price'\nimport { Stashpoint, StashpointEncoded } from './Stashpoint'\n\nexport type Booking = {\n  readonly bagCount: number\n  readonly currencyCode: string\n  readonly dateRange: DateRange\n  readonly id: string\n  readonly stashpoint: Stashpoint\n  readonly totalPrice: Price\n}\n\nexport type BookingEncoded = {\n  readonly bagCount: number\n  readonly currencyCode: string\n  readonly dateRange: DateRangeEncoded\n  readonly id: string\n  readonly stashpoint: StashpointEncoded\n  readonly totalPrice: PriceEncoded\n}\n\nexport const Booking = {\n  decode: (\n    input: unknown,\n  ): readonly [Error, undefined] | readonly [undefined, Booking] => {\n    const [error1, dateRange] = DateRange.decode((input as any).dateRange)\n\n    if (error1 !== undefined) return [error1, undefined]\n\n    const [error2, totalPrice] = Price.decode((input as any).totalPrice)\n\n    if (error2 !== undefined) return [error2, undefined]\n\n    const [error3, stashpoint] = Stashpoint.decode((input as any).stashpoint)\n\n    if (error3 !== undefined) return [error3, undefined]\n\n    return [undefined, { ...(input as any), dateRange, stashpoint, totalPrice }]\n  },\n  encode: (booking: Booking): BookingEncoded => {\n    return {\n      ...booking,\n      dateRange: DateRange.encode(booking.dateRange),\n      stashpoint: Stashpoint.encode(booking.stashpoint),\n      totalPrice: Price.encode(booking.totalPrice),\n    }\n  },\n}\n"]},"metadata":{},"sourceType":"module"}