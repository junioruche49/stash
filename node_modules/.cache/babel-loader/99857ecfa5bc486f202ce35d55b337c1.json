{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react app/stasher/src/home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { addDays, startOfDay, format } from 'date-fns';\nimport { isDateRangeValid } from './util';\nimport { getStash, postStash, postBooking, postPayment } from './config';\nimport './asset/custom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getInitialDraftCart = () => {\n  const initialDateFrom = addDays(startOfDay(new Date()), 1);\n  return {\n    bagCount: 1,\n    dateRange: {\n      from: initialDateFrom,\n      to: addDays(initialDateFrom, 1)\n    },\n    stashpointId: undefined\n  };\n};\n\nconst Home = () => {\n  _s();\n\n  var _stachList$find;\n\n  const [stachList, setStachList] = useState();\n  const [cart, setCart] = useState(getInitialDraftCart);\n  const [priceQuote, setPriceQuote] = useState();\n  const [booking, setBooking] = useState();\n  const [bookingId, setBookingId] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const getStashlist = async () => {\n    try {\n      let data = await getStash();\n      setStachList(await data.json());\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    getStashlist();\n  }, []);\n\n  const handleChangeData = async e => {\n    console.log(e);\n    let type = e.target.name;\n    let value = e.target.value;\n    let carts = { ...cart\n    };\n\n    if (value && value.length > 0) {\n      switch (type) {\n        case 'stashpoint':\n          carts.stashpointId = value;\n          setCart(carts);\n          break;\n\n        case 'fromDate':\n          carts.dateRange.from = startOfDay(new Date(value));\n          setCart(carts);\n          break;\n\n        case 'toDate':\n          carts.dateRange.to = startOfDay(new Date(value));\n          setCart(carts);\n          break;\n\n        case 'bagCount':\n          carts.bagCount = parseInt(value);\n          setCart(carts);\n          break;\n\n        default:\n          break;\n      }\n\n      if (carts.bagCount && carts.dateRange.from && carts.dateRange.to && carts.stashpointId && isDateRangeValid(carts.dateRange)) {\n        setLoading(true);\n        setBookingId(undefined);\n        await postStash(carts).then(res => res.json()).then(response => {\n          setLoading(false);\n          setPriceQuote({ ...response\n          });\n        }).catch(error => error);\n      }\n    }\n  };\n\n  const payBooking = async () => {\n    setLoading(true);\n    await postBooking(priceQuote).then(res => res.json()).then(response => {\n      setBooking(response);\n      postPayment(response.id).then(res => res.json()).then(response => {\n        setLoading(false);\n        setBookingId(response.id);\n        setPriceQuote(undefined);\n        setCart(getInitialDraftCart);\n      });\n    }).catch(err => console.log(err));\n  };\n\n  console.log('cart', cart, getInitialDraftCart().dateRange);\n  console.log('priceQuote', priceQuote);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading stashpoints\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"stashpoint\",\n          children: \"Stash Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"stashpoint\",\n          onChange: handleChangeData,\n          value: cart.stashpointId,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select stash point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), stachList === null || stachList === void 0 ? void 0 : stachList.map(data => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: data.id,\n              selected: cart.stashpointId == data.id ? true : false,\n              children: data.name\n            }, data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"stashpoint\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"fromDate\",\n            name: \"fromDate\",\n            onChange: handleChangeData,\n            value: format(cart.dateRange.from, 'yyyy-MM-dd')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"toDate\",\n            name: \"toDate\",\n            onChange: handleChangeData,\n            value: format(cart.dateRange.to, 'yyyy-MM-dd')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"stashpoint\",\n          children: \"Number of Bag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"bagCount\",\n          value: cart.bagCount,\n          onInput: handleChangeData,\n          min: 1,\n          max: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), priceQuote ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            border: '1px solid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              border: '1px solid'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stash Point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bag Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: stachList === null || stachList === void 0 ? void 0 : (_stachList$find = stachList.find(data => data.id == priceQuote.stashpointId)) === null || _stachList$find === void 0 ? void 0 : _stachList$find.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: priceQuote.bagCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: priceQuote.currencyCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: format(new Date(priceQuote.dateRange.from), 'yyyy-MM-dd')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: format(new Date(priceQuote.dateRange.to), 'yyyy-MM-dd')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: priceQuote.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: payBooking,\n          children: \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : null, bookingId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Booking \", bookingId, \" successful\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"VyjuiCv/RnCXksH70M8kP+AYkck=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mac/Documents/react app/stasher/src/home.tsx"],"names":["React","useEffect","useState","addDays","startOfDay","format","isDateRangeValid","getStash","postStash","postBooking","postPayment","getInitialDraftCart","initialDateFrom","Date","bagCount","dateRange","from","to","stashpointId","undefined","Home","stachList","setStachList","cart","setCart","priceQuote","setPriceQuote","booking","setBooking","bookingId","setBookingId","loading","setLoading","getStashlist","data","json","error","handleChangeData","e","console","log","type","target","name","value","carts","length","parseInt","then","res","response","catch","payBooking","id","err","map","border","find","currencyCode","totalPrice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { addDays, startOfDay, format } from 'date-fns'\nimport { isDateRangeValid } from './util'\nimport { Stashpoint, BookingEncoded, PriceQuote } from './Data'\nimport { getStash, postStash, postBooking, postPayment } from './config'\nimport './asset/custom.css'\n\ntype DraftCart = {\n  stashpointId: any\n  dateRange: { from: Date; to: Date }\n  bagCount: number\n}\n\nconst getInitialDraftCart = (): DraftCart => {\n  const initialDateFrom = addDays(startOfDay(new Date()), 1)\n\n  return {\n    bagCount: 1,\n    dateRange: { from: initialDateFrom, to: addDays(initialDateFrom, 1) },\n    stashpointId: undefined,\n  }\n}\n\nconst Home = () => {\n  const [stachList, setStachList] = useState<Stashpoint[]>()\n  const [cart, setCart] = useState<DraftCart>(getInitialDraftCart)\n  const [priceQuote, setPriceQuote] = useState<PriceQuote>()\n  const [booking, setBooking] = useState<BookingEncoded>()\n  const [bookingId, setBookingId] = useState<number>()\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const getStashlist = async () => {\n    try {\n      let data = await getStash()\n      setStachList(await data.json())\n    } catch (error) {}\n  }\n\n  useEffect(() => {\n    getStashlist()\n  }, [])\n\n  const handleChangeData = async (e: any) => {\n    console.log(e)\n    let type: string = e.target.name\n    let value: any = e.target.value\n    let carts: DraftCart = { ...cart }\n    if (value && value.length > 0) {\n      switch (type) {\n        case 'stashpoint':\n          carts.stashpointId = value\n          setCart(carts)\n          break\n        case 'fromDate':\n          carts.dateRange.from = startOfDay(new Date(value))\n          setCart(carts)\n\n          break\n        case 'toDate':\n          carts.dateRange.to = startOfDay(new Date(value))\n          setCart(carts)\n\n          break\n        case 'bagCount':\n          carts.bagCount = parseInt(value)\n          setCart(carts)\n\n          break\n\n        default:\n          break\n      }\n      if (\n        carts.bagCount &&\n        carts.dateRange.from &&\n        carts.dateRange.to &&\n        carts.stashpointId &&\n        isDateRangeValid(carts.dateRange)\n      ) {\n        setLoading(true)\n        setBookingId(undefined)\n        await postStash(carts)\n          .then((res) => res.json())\n          .then((response: PriceQuote) => {\n            setLoading(false)\n            setPriceQuote({ ...response })\n          })\n          .catch((error) => error)\n      }\n    }\n  }\n\n  const payBooking = async () => {\n    setLoading(true)\n\n    await postBooking(priceQuote)\n      .then((res) => res.json())\n      .then((response: BookingEncoded) => {\n        setBooking(response)\n\n        postPayment(response.id)\n          .then((res) => res.json())\n          .then((response: any) => {\n            setLoading(false)\n            setBookingId(response.id)\n            setPriceQuote(undefined)\n            setCart(getInitialDraftCart)\n          })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  console.log('cart', cart, getInitialDraftCart().dateRange)\n  console.log('priceQuote', priceQuote)\n\n  if (loading) {\n    return <span>Loading stashpoints&hellip;</span>\n  }\n\n  return (\n    <div>\n      <h1>Home</h1>\n      <br />\n      <div className='wrapper'>\n        <div className='input-field'>\n          <label htmlFor='stashpoint'>Stash Point</label>\n          <select\n            name='stashpoint'\n            onChange={handleChangeData}\n            value={cart.stashpointId}\n          >\n            <option>select stash point</option>\n            {stachList?.map((data) => {\n              return (\n                <option\n                  key={data.id}\n                  value={data.id}\n                  selected={cart.stashpointId == data.id ? true : false}\n                >\n                  {data.name}\n                </option>\n              )\n            })}\n          </select>\n        </div>\n        <div>\n          <label htmlFor='stashpoint'>Date:</label>\n          <div>\n            <input\n              type='date'\n              className='fromDate'\n              name='fromDate'\n              onChange={handleChangeData}\n              value={format(cart.dateRange.from, 'yyyy-MM-dd')}\n            />\n            <input\n              type='date'\n              className='toDate'\n              name='toDate'\n              onChange={handleChangeData}\n              value={format(cart.dateRange.to, 'yyyy-MM-dd')}\n            />\n          </div>\n        </div>\n        <div>\n          <label htmlFor='stashpoint'>Number of Bag</label>\n          <input\n            type='number'\n            name='bagCount'\n            value={cart.bagCount}\n            onInput={handleChangeData}\n            min={1}\n            max={50}\n          />\n        </div>\n      </div>\n      <br />\n      {priceQuote ? (\n        <>\n          <div>\n            <table style={{ border: '1px solid' }}>\n              <tr style={{ border: '1px solid' }}>\n                <th>Stash Point</th>\n                <th>Bag Count</th>\n                <th>Currency Code</th>\n                <th>From Date</th>\n                <th>To Date</th>\n                <th>Total Price</th>\n              </tr>\n              <tr>\n                <td>\n                  {\n                    stachList?.find(\n                      (data) => data.id == priceQuote.stashpointId,\n                    )?.name\n                  }\n                </td>\n                <td>{priceQuote.bagCount}</td>\n                <td>{priceQuote.currencyCode}</td>\n                <td>\n                  {format(new Date(priceQuote.dateRange.from), 'yyyy-MM-dd')}\n                </td>\n                <td>\n                  {format(new Date(priceQuote.dateRange.to), 'yyyy-MM-dd')}\n                </td>\n                <td>{priceQuote.totalPrice}</td>\n              </tr>\n            </table>\n            <button onClick={payBooking}>Pay</button>\n          </div>\n        </>\n      ) : null}\n      {bookingId ? (\n        <>\n          <div>\n            <h4>Booking {bookingId} successful</h4>\n          </div>\n        </>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}