[{"/Users/mac/Documents/react app/stasher/src/index.tsx":"1","/Users/mac/Documents/react app/stasher/src/reportWebVitals.ts":"2","/Users/mac/Documents/react app/stasher/src/App.tsx":"3","/Users/mac/Documents/react app/stasher/src/mocks/browser.ts":"4","/Users/mac/Documents/react app/stasher/src/mocks/handlers.ts":"5","/Users/mac/Documents/react app/stasher/src/util.ts":"6","/Users/mac/Documents/react app/stasher/src/Data/index.ts":"7","/Users/mac/Documents/react app/stasher/src/Data/Cart.ts":"8","/Users/mac/Documents/react app/stasher/src/Data/Price.ts":"9","/Users/mac/Documents/react app/stasher/src/Data/DateRange.ts":"10","/Users/mac/Documents/react app/stasher/src/Data/Stashpoint.ts":"11","/Users/mac/Documents/react app/stasher/src/Data/Payment.ts":"12","/Users/mac/Documents/react app/stasher/src/Data/PriceQuote.ts":"13","/Users/mac/Documents/react app/stasher/src/Data/Booking.ts":"14","/Users/mac/Documents/react app/stasher/src/home.tsx":"15","/Users/mac/Documents/react app/stasher/src/config.tsx":"16"},{"size":1112,"mtime":1649427350767,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1649365965126,"results":"19","hashOfConfig":"18"},{"size":265,"mtime":1649372643121,"results":"20","hashOfConfig":"18"},{"size":126,"mtime":1649365965125,"results":"21","hashOfConfig":"18"},{"size":5237,"mtime":1649365965126,"results":"22","hashOfConfig":"18"},{"size":879,"mtime":1649365965126,"results":"23","hashOfConfig":"18"},{"size":185,"mtime":1649365965125,"results":"24","hashOfConfig":"18"},{"size":776,"mtime":1649365965123,"results":"25","hashOfConfig":"18"},{"size":356,"mtime":1649365965124,"results":"26","hashOfConfig":"18"},{"size":608,"mtime":1649365965123,"results":"27","hashOfConfig":"18"},{"size":1641,"mtime":1649365965124,"results":"28","hashOfConfig":"18"},{"size":391,"mtime":1649365965124,"results":"29","hashOfConfig":"18"},{"size":1224,"mtime":1649365965124,"results":"30","hashOfConfig":"18"},{"size":1516,"mtime":1649365965123,"results":"31","hashOfConfig":"18"},{"size":6786,"mtime":1649430001135,"results":"32","hashOfConfig":"18"},{"size":824,"mtime":1649427058427,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"jfg01",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/mac/Documents/react app/stasher/src/index.tsx",[],[],["84","85"],"/Users/mac/Documents/react app/stasher/src/reportWebVitals.ts",[],[],"/Users/mac/Documents/react app/stasher/src/App.tsx",[],[],"/Users/mac/Documents/react app/stasher/src/mocks/browser.ts",[],[],"/Users/mac/Documents/react app/stasher/src/mocks/handlers.ts",[],[],"/Users/mac/Documents/react app/stasher/src/util.ts",[],[],"/Users/mac/Documents/react app/stasher/src/Data/index.ts",[],[],"/Users/mac/Documents/react app/stasher/src/Data/Cart.ts",["86"],[],"/Users/mac/Documents/react app/stasher/src/Data/Price.ts",["87"],[],"/Users/mac/Documents/react app/stasher/src/Data/DateRange.ts",["88"],[],"/Users/mac/Documents/react app/stasher/src/Data/Stashpoint.ts",["89","90"],[],"/Users/mac/Documents/react app/stasher/src/Data/Payment.ts",["91"],[],"/Users/mac/Documents/react app/stasher/src/Data/PriceQuote.ts",["92"],[],"/Users/mac/Documents/react app/stasher/src/Data/Booking.ts",["93"],[],"/Users/mac/Documents/react app/stasher/src/home.tsx",["94","95","96"],[],"import React, { useEffect, useState } from 'react'\nimport { addDays, startOfDay, format } from 'date-fns'\nimport { isDateRangeValid } from './util'\nimport { Stashpoint, BookingEncoded, PriceQuote } from './Data'\nimport { getStash, postStash, postBooking, postPayment } from './config'\nimport './asset/custom.css'\n\ntype DraftCart = {\n  stashpointId: any\n  dateRange: { from: Date; to: Date }\n  bagCount: number\n}\n\nconst getInitialDraftCart = (): DraftCart => {\n  const initialDateFrom = addDays(startOfDay(new Date()), 1)\n\n  return {\n    bagCount: 1,\n    dateRange: { from: initialDateFrom, to: addDays(initialDateFrom, 1) },\n    stashpointId: undefined,\n  }\n}\n\nconst Home = () => {\n  const [stachList, setStachList] = useState<Stashpoint[]>()\n  const [cart, setCart] = useState<DraftCart>(getInitialDraftCart)\n  const [priceQuote, setPriceQuote] = useState<PriceQuote>()\n  const [booking, setBooking] = useState<BookingEncoded>()\n  const [bookingId, setBookingId] = useState<number>()\n  const [loading, setLoading] = useState<boolean>(false)\n  const [error, setError] = useState<string>()\n\n  const getStashlist = async () => {\n    try {\n      let data = await getStash()\n      setStachList(await data.json())\n    } catch (error: any) {\n      setLoading(false)\n      setError(error.error.code)\n    }\n  }\n\n  useEffect(() => {\n    getStashlist()\n  }, [])\n\n  const handleChangeData = async (e: any) => {\n    console.log(e)\n    let type: string = e.target.name\n    let value: any = e.target.value\n    let carts: DraftCart = { ...cart }\n    if (value && value.length > 0) {\n      switch (type) {\n        case 'stashpoint':\n          carts.stashpointId = value\n          setCart(carts)\n          break\n        case 'fromDate':\n          carts.dateRange.from = startOfDay(new Date(value))\n          setCart(carts)\n\n          break\n        case 'toDate':\n          carts.dateRange.to = startOfDay(new Date(value))\n          setCart(carts)\n\n          break\n        case 'bagCount':\n          carts.bagCount = parseInt(value)\n          setCart(carts)\n\n          break\n\n        default:\n          break\n      }\n      if (\n        carts.bagCount &&\n        carts.dateRange.from &&\n        carts.dateRange.to &&\n        carts.stashpointId &&\n        isDateRangeValid(carts.dateRange)\n      ) {\n        setLoading(true)\n        setBookingId(undefined)\n        try {\n          await postStash(carts)\n            .then((res) => res.json())\n            .then((response: any) => {\n              setLoading(false)\n              if (response.error) {\n                setError(response.error.code)\n              } else {\n                setPriceQuote({ ...response })\n              }\n            })\n            .catch((error) => {\n              setLoading(false)\n              setError(error.error.code)\n            })\n        } catch (error: any) {\n          setLoading(false)\n          setError(error.error.code)\n        }\n      }\n    }\n  }\n\n  const payBooking = async () => {\n    setLoading(true)\n\n    await postBooking(priceQuote)\n      .then((res) => res.json())\n      .then((response: any) => {\n        setBooking(response)\n        if (response.error) {\n          setError(response.error.code)\n          return\n        }\n        postPayment(response.id)\n          .then((res) => res.json())\n          .then((response: any) => {\n            if (response.error) {\n              setError(response.error.code)\n              return\n            }\n            setLoading(false)\n            setBookingId(response.id)\n            setPriceQuote(undefined)\n            setCart(getInitialDraftCart)\n          })\n      })\n      .catch((err) => {\n        if (err.error) {\n          setError(err.error.code)\n          return\n        }\n      })\n  }\n\n  if (loading) {\n    return <span>Loading stashpoints&hellip;</span>\n  }\n\n  return (\n    <div className='home'>\n      <div className='wrapper'>\n        <div className='input-field'>\n          <label htmlFor='stashpoint'>Stash Point</label>\n          <select\n            name='stashpoint'\n            onChange={handleChangeData}\n            value={cart.stashpointId}\n          >\n            <option>select stash point</option>\n            {stachList?.map((data) => {\n              return (\n                <option\n                  key={data.id}\n                  value={data.id}\n                  selected={cart.stashpointId == data.id ? true : false}\n                >\n                  {data.name}\n                </option>\n              )\n            })}\n          </select>\n        </div>\n        <div className='input-field'>\n          <label htmlFor='stashpoint'>Date:</label>\n          <div>\n            <input\n              type='date'\n              className='fromDate'\n              name='fromDate'\n              onChange={handleChangeData}\n              value={format(cart.dateRange.from, 'yyyy-MM-dd')}\n            />\n            <input\n              type='date'\n              className='toDate'\n              name='toDate'\n              onChange={handleChangeData}\n              value={format(cart.dateRange.to, 'yyyy-MM-dd')}\n            />\n          </div>\n        </div>\n        <div className='input-field'>\n          <label htmlFor='stashpoint'>Number of Bag</label>\n          <input\n            type='number'\n            name='bagCount'\n            value={cart.bagCount}\n            onInput={handleChangeData}\n            min={1}\n            max={50}\n          />\n        </div>\n      </div>\n      <br />\n      {priceQuote ? (\n        <>\n          <div>\n            <table>\n              <tr>\n                <th>Stash Point</th>\n                <th>Bag Count</th>\n                <th>Currency Code</th>\n                <th>From Date</th>\n                <th>To Date</th>\n                <th>Total Price</th>\n              </tr>\n              <tr>\n                <td>\n                  {\n                    stachList?.find(\n                      (data) => data.id == priceQuote.stashpointId,\n                    )?.name\n                  }\n                </td>\n                <td>{priceQuote.bagCount}</td>\n                <td>{priceQuote.currencyCode}</td>\n                <td>\n                  {format(new Date(priceQuote.dateRange.from), 'yyyy-MM-dd')}\n                </td>\n                <td>\n                  {format(new Date(priceQuote.dateRange.to), 'yyyy-MM-dd')}\n                </td>\n                <td>{priceQuote.totalPrice}</td>\n              </tr>\n            </table>\n            <br />\n            <button onClick={payBooking}>Pay</button>\n          </div>\n        </>\n      ) : null}\n      {bookingId ? (\n        <>\n          <div>\n            <h4>Booking {bookingId} successful</h4>\n          </div>\n        </>\n      ) : null}\n      {error ? <h3 className='red'>{error}</h3> : null}\n    </div>\n  )\n}\n\nexport default Home\n","/Users/mac/Documents/react app/stasher/src/config.tsx",[],[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":17,"column":14,"nodeType":"103","messageId":"104","endLine":17,"endColumn":18},{"ruleId":"101","severity":1,"message":"105","line":7,"column":14,"nodeType":"103","messageId":"104","endLine":7,"endColumn":19},{"ruleId":"101","severity":1,"message":"106","line":13,"column":14,"nodeType":"103","messageId":"104","endLine":13,"endColumn":23},{"ruleId":"101","severity":1,"message":"107","line":23,"column":14,"nodeType":"103","messageId":"104","endLine":23,"endColumn":24},{"ruleId":"101","severity":1,"message":"108","line":45,"column":14,"nodeType":"103","messageId":"104","endLine":45,"endColumn":25},{"ruleId":"101","severity":1,"message":"109","line":11,"column":14,"nodeType":"103","messageId":"104","endLine":11,"endColumn":21},{"ruleId":"101","severity":1,"message":"110","line":22,"column":14,"nodeType":"103","messageId":"104","endLine":22,"endColumn":24},{"ruleId":"101","severity":1,"message":"111","line":25,"column":14,"nodeType":"103","messageId":"104","endLine":25,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":28,"column":10,"nodeType":"103","messageId":"114","endLine":28,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":161,"column":47,"nodeType":"117","messageId":"118","endLine":161,"endColumn":49},{"ruleId":"115","severity":1,"message":"116","line":217,"column":41,"nodeType":"117","messageId":"118","endLine":217,"endColumn":43},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"@typescript-eslint/no-redeclare","'Cart' is already defined.","Identifier","redeclared","'Price' is already defined.","'DateRange' is already defined.","'Stashpoint' is already defined.","'Stashpoints' is already defined.","'Payment' is already defined.","'PriceQuote' is already defined.","'Booking' is already defined.","@typescript-eslint/no-unused-vars","'booking' is assigned a value but never used.","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]